@import '../../define';
@use 'sass:math';

$range-thumb-width: 8px;
$base-circle-radius: 5px;
$card-v-padding: 8px;
$card-h-padding: 16px;

.feature-card {
  display: flex;
  flex-direction: column;
  height: 190px;
  width: 300px;
  border-radius: 10px;
  padding: $card-v-padding $card-h-padding;
  box-shadow: $shadow-border-light;
  background: white;
  position: relative;
}

.feature-header {
  width: calc(100% + #{2 * $card-h-padding});
  height: 40px;
  flex: 0 0 auto;
  margin: #{-$card-v-padding} #{-$card-h-padding} 0px #{-$card-h-padding};
  padding: $card-v-padding $card-h-padding 5px $card-h-padding;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;

  background: $gray-100;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  .feature-info {
    display: flex;
    align-items: center;
    gap: 8px;
    height: 24px;

    .feature-name {
      // font-weight: 800;
    }

    .feature-difficulty {
      border-radius: 50%;
      // background-color: $gray-200;
      width: 1.6em;
      height: 1.6em;
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      border: 1px solid $gray-200;

      .svg-icon {
        :global(svg) {
          width: 1.2em;
          height: 1.2em;
        }
      }
    }
  }
}

.values {
  display: flex;
  flex-direction: row;
  align-items: center;

  .value-change {
    font-size: 0.8em;
    padding: 0px 14px 8px 5px;
    margin: -5px 0 0 0;
    color: $green-600;
  }
}

.feature-arrow {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 5px;

  .svg-icon {
    color: $gray-800;

    :global(svg) {
      width: 10px;
      height: 5px;
    }
  }
}

.svg-icon {
  color: $gray-800;
  fill: $gray-800;
  display: flex;
  align-items: center;
  justify-content: center;

  :global(svg) {
    width: 1em;
    height: 1em;
  }
}

.arrow-right {
  box-sizing: border-box;
  position: relative;
  display: block;
  width: 100%;
  height: 5px;

  &::after,
  &::before {
    content: "";
    display: block;
    box-sizing: border-box;
    position: absolute;
    right: 3px;
  }

  &::after {
    width: 8px;
    height: 8px;
    border-top: 2px solid $gray-400;
    border-right: 2px solid $gray-400;
    transform: rotate(45deg);
    bottom: 7px;
  }

  &::before {
    width: calc(100% - 4px);
    height: 2px;
    bottom: 10px;
    background: $gray-400;
  }
}

.feature-hist {
  position: relative;
  width: 100%;
}

.feature-annotations {
  position: absolute;
  top: 0px;
  width: 100%;
  font-size: 0.9em;

  .annotation {
    position: absolute;
    border-radius: 5px;
    padding: 0 5px;
    top: 7px;
    cursor: default;
    color: white;

    transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    transform-origin: bottom center;
    transform: scale(0);

    &:global(.show) {
      transform: scale(1);
    }

    &::before {
      position: absolute;
      content: '';
      width: 6px;
      height: 6px;
      bottom: 0;
      left: 51%;
      transform: translate(-50%, 50%) rotate(45deg);
      background-color: inherit;
    }

    &:global(.no-triangle) {
      &:global(::before) {
        width: 0px;
        height: 0px;
      }
    }
  }

  .annotation-name {
    color: $gray-400;
    padding: 0px;
    left: 0px;
    display: flex;
    opacity: 0;
    transform: scale(1);
    transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;

    .svg-icon {
      fill: $gray-300;
      color: $gray-300;
      margin-right: 4px;

      :global(svg) {
        width: 1.2em;
        height: 1.2em;
      }
    }

    &.show {
      opacity: 1;
    }
  }

  .annotation-user {
    background-color: $blue-500;
    left: 20px;
  }

  .annotation-coach {
    background-color: $green-600;
    left: 20px;
  }

  .annotation-original {
    background-color: $gray-400;
    left: 20px;
  }

  .annotation-range {
    background-color: $orange-50;
    color: $green-600;
    left: 20px;
  }
}

.feature-slider {
  position: absolute;
  top: 135px;
  width: 100%;
  display: flex;
  flex-direction: column;

  .track {
    width: calc(100% - #{2 * $range-thumb-width + 2 * $card-h-padding});
    background-color: $gray-200;
    // Only use top and bottom border here to avoid offsetting the left and right
    // with artifacts => cause misalignment with svg dimension
    border-top: 1px solid white;
    border-bottom: 1px solid white;
    position: absolute;
    left: $range-thumb-width;
    height: 8px;

    .range-track {
      position: absolute;
      height: 6px;
      background-color: $orange-100;
    }
  }

  .svg-icon.thumb {
    position: absolute;
    padding: 0;
    margin: 0px;
    top: -4px;

    color: $orange-300;
    fill: $orange-300;
    cursor: grab;

    :global(svg) {
      width: 8px;
    }

    &::before {
      content: '';
      display: inline-block;
      position: absolute;
      z-index: 1;
      width: $base-circle-radius;
      height: $base-circle-radius;
      border-radius: 50%;
      background: currentColor;
      opacity: 0.2;
      // Center the background circle
      left: 50%;
      top: 50%;
      margin-top: -($base-circle-radius / 2);
      margin-left: -($base-circle-radius / 2);
      transform: scale(0.1);
      transition: transform 300ms ease-in-out;
    }
  }

  .svg-icon.thumb:hover {
    &::before {
      transform: scale(5);
    }

    .thumb-label {
      transform: translateX(-50%) translateY(100%) scale(1);
    }
  }

  .svg-icon.thumb:focus {
    cursor: grabbing;
    outline: none;

    &::before {
      transform: scale(7);
    }

    .thumb-label {
      transform: translateX(-50%) translateY(100%) scale(1);
    }
  }

  .svg-icon.icon-range-thumb-middle {
    fill: $gray-400;
    color: $gray-400;
    stroke: $gray-100;
    stroke-width: 10;
    top: -10px;

    :global(svg) {
      width: 1.5em;
      height: 1.5em;
    }
  }

  :global(.svg-icon.icon-range-thumb-middle.user) {
    fill: $blue-400;
    color: $blue-400;
    stroke: $blue-100;
  }

  :global(.svg-icon.icon-range-thumb-middle.coach) {
    fill: $green-500;
    color: $green-500;
    stroke: $green-100;
  }
}

.thumb-label {
  position:absolute;
  top: 5px;
  left: 50%;

  font-size: 0.8em;
  border-radius: 2px;
  line-height: 1.2;
  white-space: nowrap;
  background-color: $gray-500;
  color: white;

  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transform-origin: top center;
  transform: translateX(-50%) translateY(100%) scale(0);

  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.25em;

  &.thumb-label-middle {
    top: 12px;
  }

  &::before {
    position: absolute;
    content: '';
    width: 8px;
    height: 8px;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, -220%) rotate(45deg);
    background-color: inherit;
  }
}

.feature-ticks {
  margin: 0 0 10px 0;
  height: 40px;
  box-sizing: border-box;
}

.svg-hist {
  :global(.mark line) {
    stroke-dasharray: 0;
  }

  :global(.mark.no-dash line) {
    stroke-dasharray: 0;
  }

  :global(.density-original-mark line) {
    stroke-width: 2;
    stroke: $gray-600;
  }

  :global(.density-user-mark line) {
    stroke-width: 2;
    stroke: $blue-500;
  }

  :global(.density-coach-mark line) {
    stroke-width: 2;
    stroke: $green-600;
  }

  :global(.tick line) {
    stroke: $orange-100;
    transform: scaleY(1.8);
    transition: transform 300ms ease-in-out;
  }

  :global(.tick.out-range line) {
    stroke: $gray-200;
    transform: scaleY(1);
  }

  :global(.original-mark line) {
    stroke-width: 2;
    stroke: $gray-600;
  }

  :global(.user-mark line) {
    stroke-width: 2;
    stroke: $blue-500;
  }

  :global(.coach-mark line) {
    stroke-width: 2;
    stroke: $green-600;
  }
}

.arrow-up {
  position: absolute;
  top: -7px;
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid black;
}

.arrow-down {
  position: absolute;
  bottom: -17px;
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid transparent;
  border-top: 10px solid black;
}

.svg-hist {
  :global(.area-path) {
    fill: $gray-300;
    &.selected {
      fill: pink;
    }
  }

  :global(.area-path.selected) {
    fill: $orange-300;
  }
}